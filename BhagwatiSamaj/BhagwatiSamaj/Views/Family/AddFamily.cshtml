@model BhagwatiSamaj.Models.FamilyViewModel
@{
    ViewBag.Title = "AddFamily";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12">
        <form id="FamilyInfo" class="reg-page" enctype="multipart/form-data">
            <div class="reg-header">
                <h2>Add new Family</h2>
            </div>
            @Html.HiddenFor(x => x.family.Id)
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <a data-toggle="collapse" data-target="#mainPersonPanel"
                           href="#mainPersonPanel">
                            <i class="fa fa-tasks"></i>Main Person Info
                        </a>
                    </h3>
                </div>
                <div id="mainPersonPanel" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-10">
                                <div class="row">
                                    <div class="col-sm-3">
                                        <label>First Name</label>
                                        @Html.TextBoxFor(x => x.family.FirstName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblFirstName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-3">
                                        <label>Middle Name</label>
                                        @Html.TextBoxFor(x => x.family.MiddleName, new { @class = "form-control margin-bottom-20", @onkeyup = "MiddleNameChanged()", @onkeydown = "MiddleNameChanged()" })
                                        <label id="lblLastName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-3">
                                        <label>Last Name</label>
                                        @Html.TextBoxFor(x => x.family.LastName, new { @class = "form-control margin-bottom-20", @onkeyup = "LastNameChanged()", @onkeydown = "LastNameChanged()" })
                                        <label id="lblLastName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-3">
                                        <label>Gender</label>
                                        @{
                                            var GenderList = new List<SelectListItem>();
                                            GenderList.Add(new SelectListItem() { Text = "Male", Value = "MALE" });
                                            GenderList.Add(new SelectListItem() { Text = "Female", Value = "FEMALE" });
                                        }
                                        @Html.DropDownListFor(x => x.family.Gender, GenderList, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblLastName" style="color:red;display:none"></label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <label>Current Address</label>
                                        @Html.TextAreaFor(x => x.family.CurrentAddress, new { @rows = 4, @onkeyup = "CurrentAddressChanged()", @onkeydown = "CurrentAddressChanged()", @class = "form-control margin-bottom-20" })
                                        <label id="lblUserName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-6">
                                        <label>Permenent Address<span class="color-red">*</span></label>
                                        @Html.TextAreaFor(x => x.family.PermenentAddress, new { @rows = 4, @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <img class="img-responsive rounded-x" id="imgPic" src="@Url.Content("~/Content/img/demo.jpg")" alt="">
                                <br />
                                <button type="button" class="btn btn-primary center-block" onclick="OpenPicUpload(this)">Change Image</button>
                                <input type="file" accept="image/*" name="fPicMainMember" id="fPic" onchange="PicSelected(this)" style="display:none" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label>Country<span class="color-red">*</span></label>
                                @Html.DropDownListFor(x => x.family.CountryId, new SelectList(ViewBag.CountryList, "Id", "Name"), "-- Select --", new { @class = "form-control margin-bottom-20", @onchange = "CountryChanged(this)" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>State<span class="color-red">*</span></label>
                                @Html.DropDownListFor(x => x.family.StateId, new SelectList(ViewBag.StateList, "", "", ""), new { @class = "form-control margin-bottom-20", @onchange = "StateChanged(this)" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>City<span class="color-red">*</span></label>
                                @Html.DropDownListFor(x => x.family.CityId, new SelectList(ViewBag.CityList, "", "", ""), new { @class = "form-control margin-bottom-20", @onchange = "CityChanged(this)" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label>Contact No<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.ContactNo, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Email Id<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.EmailId, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Mobile No<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.MobileNo, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label>Native Place<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.NativePlace, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Education<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.Education, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Other Skills<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.OtherSkills, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label>Marital Status<span class="color-red">*</span></label>
                                @{
                                    var MrgList = new List<SelectListItem>();
                                    MrgList.Add(new SelectListItem() { Text = "Merried", Value = "MERRIED" });
                                    MrgList.Add(new SelectListItem() { Text = "Unmerried", Value = "UNMERRIED" });
                                }
                                @Html.DropDownListFor(x => x.family.MaritalStatus, MrgList, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Merriage Place :<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.MerriageVillage, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Occupation Type</label>
                                @{
                                    var OccupationList = new List<SelectListItem>();
                                    OccupationList.Add(new SelectListItem() { Text = "Business", Value = "BUSINESS" });
                                    OccupationList.Add(new SelectListItem() { Text = "Job", Value = "JOB" });
                                    OccupationList.Add(new SelectListItem() { Text = "House Wife", Value = "HOUSEWIFE" });
                                }
                                @Html.DropDownListFor(x => x.family.OccupationType, OccupationList, new { @class = "form-control margin-bottom-20" })
                                <label id="lblLastName" style="color:red;display:none"></label>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-sm-4">
                                <label>Business/Job Title<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.BusinessTitle, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Business/Job Address<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.BusinessAddress, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Business/Job Position<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.BusinessPosition, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <label>Annual Income<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.AnnualIncome, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Business/Job Contact No<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.BusinessContactNo, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                            <div class="col-sm-4">
                                <label>Pin Code<span class="color-red">*</span></label>
                                @Html.TextBoxFor(x => x.family.PinCode, new { @class = "form-control margin-bottom-20" })
                                <label id="lblEmailId" style="color:red;display:none"></label>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <a data-toggle="collapse" data-target="#fatherPanel"
                           href="#fatherPanel">
                            <i class="fa fa-tasks"></i>Father Info
                        </a>
                    </h3>
                </div>
                <div id="fatherPanel" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-10">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>First Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherFirstName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Middle Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherMiddleName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Last Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherLastName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>Occupation Type</label>
                                        @{
                                            var FatherOccupationList = new List<SelectListItem>();
                                            FatherOccupationList.Add(new SelectListItem() { Text = "Business", Value = "BUSINESS" });
                                            FatherOccupationList.Add(new SelectListItem() { Text = "Job", Value = "JOB" });
                                            FatherOccupationList.Add(new SelectListItem() { Text = "Retired", Value = "RETIRED" });
                                        }
                                        @Html.DropDownListFor(x => x.family.FatherOccupationType, FatherOccupationList, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblLastName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Title<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherBusinessTitle, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Address<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherBusinessAddress, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>

                                <div class="row">


                                    <div class="col-sm-4">
                                        <label>Business/Job Position<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherBusinessPosition, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Annual Income<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherAnnualIncome, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Contact No<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.FatherBusinessContactNo, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <img class="img-responsive rounded-x" id="imgPic" src="@Url.Content("~/Content/img/demo.jpg")" alt="">
                                <br />
                                <button type="button" class="btn btn-primary center-block" onclick="OpenPicUpload(this)">Change Image</button>
                                <input type="file" accept="image/*" name="fPicFather" id="fPic" onchange="PicSelected(this)" style="display:none" />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <a data-toggle="collapse" data-target="#motherPanel"
                           href="#motherPanel">
                            <i class="fa fa-tasks"></i>Mother Info
                        </a>
                    </h3>
                </div>
                <div id="fatherPanel" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-10">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>Mother First Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherFirstName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Mother Middle Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherMiddleName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Mother Last Name<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherLastName, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-4">
                                        <label>Occupation Type</label>
                                        @{
                                            var MotherOccupationList = new List<SelectListItem>();
                                            MotherOccupationList.Add(new SelectListItem() { Text = "Business", Value = "BUSINESS" });
                                            MotherOccupationList.Add(new SelectListItem() { Text = "Job", Value = "JOB" });
                                            MotherOccupationList.Add(new SelectListItem() { Text = "House Wife", Value = "HOUSEWIFE" });
                                        }
                                        @Html.DropDownListFor(x => x.family.MotherOccupationType, MotherOccupationList, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblLastName" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Title<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherBusinessTitle, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Address<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherBusinessAddress, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>

                                <div class="row">


                                    <div class="col-sm-4">
                                        <label>Business/Job Position<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherBusinessPosition, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Annual Income<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherAnnualIncome, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                    <div class="col-sm-4">
                                        <label>Business/Job Contact No<span class="color-red">*</span></label>
                                        @Html.TextBoxFor(x => x.family.MotherBusinessContactNo, new { @class = "form-control margin-bottom-20" })
                                        <label id="lblEmailId" style="color:red;display:none"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <img class="img-responsive rounded-x" id="imgPic" src="@Url.Content("~/Content/img/demo.jpg")" alt="">
                                <br />
                                <button type="button" class="btn btn-primary center-block" onclick="OpenPicUpload(this)">Change Image</button>
                                <input type="file" accept="image/*" name="fPicMother" id="fPic" onchange="PicSelected(this)" style="display:none" />
                            </div>
                        </div>

                    </div>
                </div>

            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <a data-toggle="collapse" data-target="#otherPanel"
                           href="#otherPanel">
                            <i class="fa fa-tasks"></i>Other Family Members
                        </a>
                    </h3>
                </div>
                <div id="otherPanel" class="panel-collapse collapse in">
                    <div class="panel-body">
                        @if (@Model.FamilyMembers != null)
                        {
                            <div class="row">
                                <div class="col-sm-2">
                                    <button class="btn btn-primary" type="button" onclick="AddMember()">Add new member</button>
                                </div>
                                <div class="col-sm-offset-8 col-sm-2 text-right">
                                    <button class="btn btn-primary" type="button" onclick="RemoveMember()">Remove Member</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <table class="table table-hover table-bordered" id="tblMember">
                                        <thead>
                                            <tr>
                                                <th>Member Form</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var member in Model.FamilyMembers)
                                            {
                                                @Html.Partial("_FamilyMemberRow", member)
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-sm-12">
                    <label style="color:red">All fields on this form is compulsary to fill up</label>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 text-right">
                    <button class="btn btn-primary" type="button" onclick="SaveFamily()">Register</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnCountry" data-toggle="modal" data-target="#countryModal">
    Launch Country Modal
</button>

<!-- Modal -->
<div class="modal fade" id="countryModal" tabindex="-1" role="dialog" aria-labelledby="countryModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="countryModalLabel">Add New Country</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseCountry()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveCountry()">Add Country</button>
            </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnState" data-toggle="modal" data-target="#stateModal">
    Launch State Modal
</button>

<!-- Modal -->
<div class="modal fade" id="stateModal" tabindex="-1" role="dialog" aria-labelledby="stateModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="stateModalLabel">Add New State</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseState()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveState()">Add State</button>
            </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnCity" data-toggle="modal" data-target="#cityModal">
    Launch Country Modal
</button>

<!-- Modal -->
<div class="modal fade" id="cityModal" tabindex="-1" role="dialog" aria-labelledby="cityModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="cityModalLabel">Add New City</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseCity()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveCity()">Add City</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //$('#candidate_BirthDate').datepicker();
        //$('#candidate_BirthTime').datepicker({
        //    format: "hh:mm:ss tt"
        //});
        $('#countryModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","Country")',
                success: function (data) {
                    $('#countryModal .modal-body').html(data);
                }
            });
        });
        $('#stateModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","State")',
                data: { CountryId: $('#family_CountryId').val() },
                success: function (data) {
                    $('#stateModal .modal-body').html(data);
                }
            });
        });

        $('#cityModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","City")',
                data: { StateId: $('#family_StateId').val() },
                success: function (data) {
                    $('#cityModal .modal-body').html(data);
                }
            });
        });
    });

    function CloseCountry() {
        $('#countryModal').modal('hide');
        $('#family_CountryId').val("");
    }

    function CloseState() {
        $('#stateModal').modal('hide');
        $('#family_StateId').val("");
    }
    function CloseCity() {
        $('#cityModal').modal('hide');
        $('#family_CityId').val("");
    }

    function CountryChanged(country) {
        if ($(country).val() == "0") {
            $('#btnCountry').click();
        }
        else {
            $.ajax({
                url: '@Url.Action("GetStateByCountry","State")',
                data: { CountryId: $(country).val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        var strHtml = "<option value>-- Select --</option>";
                        for (var i = 0; i < data.ResponseValue.length; i++) {
                            strHtml += '<option value="' + data.ResponseValue[i].Id + '">' + data.ResponseValue[i].Name + '</option>';
                        }
                        $('#family_StateId').html(strHtml);
                        $('#family_CityId').empty();
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function StateChanged(state) {
        if ($(state).val() == "0") {
            $('#btnState').click();
        }
        else {
            $.ajax({
                url: '@Url.Action("GetCityByState","City")',
                data: { StateId: $(state).val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        var strHtml = "<option value>-- Select --</option>";
                        for (var i = 0; i < data.ResponseValue.length; i++) {
                            strHtml += '<option value="' + data.ResponseValue[i].Id + '">' + data.ResponseValue[i].Name + '</option>';
                        }
                        $('#family_CityId').html(strHtml);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function CityChanged(city) {
        if ($(city).val() == "0") {
            $('#btnCity').click();
        }
    }

    function SaveCountry() {
        var AddedCountry = $('#txtNewCountry').val();
        if (ValidateCountry()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCountry","Country")',
                data: { CountryName: $('#txtNewCountry').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#family_CountryId option').removeAttr('selected');
                        $('#family_CountryId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#countryModal').modal('hide');
                        CountryChanged($('#family_CountryId')[0]);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function SaveState() {
        var AddedCountry = $('#txtNewState').val();
        if (ValidateState()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveState","State")',
                data: { StateName: $('#txtNewState').val(), CountryId: $('#ddlNewCountry').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#family_StateId option').removeAttr('selected');
                        $('#family_StateId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#stateModal').modal('hide');
                        StateChanged($('#family_StateId')[0]);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function SaveCity() {
        var AddedCountry = $('#txtNewCity').val();
        if (ValidateCity()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCity","City")',
                data: { CityName: $('#txtNewCity').val(), StateId: $('#ddlNewState').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#family_CityId option').removeAttr('selected');
                        $('#family_CityId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#cityModal').modal('hide');
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function ValidateCountry() {
        return true;
    }

    function ValidateState() {
        return true;
    }

    function ValidateCity() {
        return true;
    }

    function OpenPicUpload(ctrl) {
        $(ctrl).siblings('#fPic').click();
    }

    function PicSelected(ctrl) {
        if ($(ctrl)[0].files && $(ctrl)[0].files.length > 0) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(ctrl).siblings('#imgPic').attr('src', e.target.result);
            }
            reader.readAsDataURL($(ctrl)[0].files[0]);
        }
    }

    function CurrentAddressChanged() {
        $('#family_PermenentAddress').val($('#family_CurrentAddress').val());
    }

    function LastNameChanged() {
        $('#family_FatherLastName').val($('#family_LastName').val());
        $('#family_MotherLastName').val($('#family_LastName').val());
    }
    function MiddleNameChanged() {
        $('#family_FatherFirstName').val($('#family_MiddleName').val());
        $('#family_MotherMiddleName').val($('#family_MiddleName').val());
    }

    function AddMember() {
        $.ajax({
            url: '@Url.Action("AddFamilyMember","Family")',
            success: function (data) {
                $('#tblMember tbody').append(data);
            }
        });
    }

    function SaveFamily() {
        if (ValidateFamily()) {
            var formData = new FormData($("#FamilyInfo")[0]);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveFamily","Family")',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.IsSuccess) {
                        alert("Family information is saved successfully.");
                        window.location.reload();
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function ValidateFamily() {
        return true;
    }

    $('#tblMember tbody tr').live('click', function () {
        $(this).addClass('selected');
        $(this).siblings().removeClass('selected');
    });

    function RemoveMember() {
        if ($('#tblMember tbody tr.selected').length == 0) {
            alert("Please select a member to remove");
            return false;
        }
        if (confirm("Are you sure want to remove current family member?")) {
            $('#tblMember tbody tr.selected').remove();
            if ($('#tblMember tbody tr').length == 0) {
                AddMember();
            }
        }
    }
</script>