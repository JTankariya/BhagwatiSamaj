@model BhagwatiSamaj.Models.Matrimonial
@{
    ViewBag.Title = "AddMatrimonial";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container" style="margin-top:10px">
    <form id="MatrimonialInfo" class="reg-page" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-12">
                        Full Name : @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                        @Html.HiddenFor(x => x.Id)
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        Address : @Html.TextAreaFor(x => x.Address, new { @class = "form-control" })
                    </div>
                </div>
                <br />
            </div>
            <div class="col-md-2">
                @if (Model.Id == 0)
                {
                    <img class="img-responsive rounded-x" id="imgPic" src="@Url.Content("~/Content/img/demo.jpg")" alt="">
                }
                else
                {
                    <img class="img-responsive rounded-x" id="imgPic" src="@(Url.Content(Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["MatrimonialPhotoPath"])+Model.Photo))" alt="">
                }
                <br />
                <button type="button" class="btn btn-success center-block" onclick="OpenPicUpload()">Change Image</button>
                <input type="file" accept="image/*" name="fPic" id="fPic" onchange="PicSelected()" style="display:none" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-4">
                <label>Country<span class="color-red">*</span></label>
                @Html.DropDownListFor(x => x.CountryId, new SelectList(ViewBag.CountryList, "Id", "Name"), "-- Select --", new { @class = "form-control margin-bottom-20", @onchange = "CountryChanged(this)" })
                <label id="lblEmailId" style="color:red;display:none"></label>
            </div>
            <div class="col-sm-4">
                <label>State<span class="color-red">*</span></label>
                @Html.DropDownListFor(x => x.StateId, new SelectList(ViewBag.StateList, "", "", ""), new { @class = "form-control margin-bottom-20", @onchange = "StateChanged(this)" })
                <label id="lblEmailId" style="color:red;display:none"></label>
            </div>
            <div class="col-sm-4">
                <label>City<span class="color-red">*</span></label>
                @Html.DropDownListFor(x => x.CityId, new SelectList(ViewBag.CityList, "", "", ""), new { @class = "form-control margin-bottom-20", @onchange = "CityChanged(this)" })
                <label id="lblEmailId" style="color:red;display:none"></label>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <label>Pin Code<span class="color-red">*</span></label>
                @Html.TextBoxFor(x => x.PinCode, new { @class = "form-control margin-bottom-20" })
            </div>
            <div class="col-md-4">
                <label>Native Place<span class="color-red">*</span></label>
                @Html.TextBoxFor(x => x.NativePlace, new { @class = "form-control margin-bottom-20" })
            </div>
            <div class="col-md-2">
                @{
                    var GenderList = new List<SelectListItem>();
                    GenderList.Add(new SelectListItem() { Text = "Male", Value = "true" });
                    GenderList.Add(new SelectListItem() { Text = "Female", Value = "false" });
                }
                Gender : @Html.DropDownListFor(x => x.Gender, GenderList, new { @class = "form-control margin-bottom-20" })
            </div>
            <div class="col-md-2">
                Is Active : @Html.CheckBoxFor(x => x.IsActive, new { @class = " margin-bottom-20" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Height : @Html.TextBoxFor(x => x.Height, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Weight : @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Date of Birth : @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Birth Time : @Html.TextBoxFor(x => x.BirthTime, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Birth Place : @Html.TextBoxFor(x => x.BirthPlace, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Hobby : @Html.TextBoxFor(x => x.Hobby, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Skin Color : @Html.TextBoxFor(x => x.SkinColor, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Education : @Html.TextBoxFor(x => x.Education, new { @class = "form-control" })
            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Other Skills : @Html.TextBoxFor(x => x.OtherSkills, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Contact No : @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control" })
            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Email Id : @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Mobile No : @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control" })
            </div>

        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Mosal Name : @Html.TextBoxFor(x => x.MosalName, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Mosal Village : @Html.TextBoxFor(x => x.MosalVillage, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                @{
                    var OccupationList = new List<SelectListItem>();
                    OccupationList.Add(new SelectListItem() { Text = "Business", Value = "BUSINESS" });
                    OccupationList.Add(new SelectListItem() { Text = "Job", Value = "JOB" });
                    OccupationList.Add(new SelectListItem() { Text = "House Wife", Value = "HOUSEWIFE" });
                }

                Business/Job Type : @Html.DropDownListFor(x => x.BusinessType, OccupationList, new { @class = "form-control margin-bottom-20" })
            </div>
            <div class="col-md-6">
                Business/Job Title : @Html.TextBoxFor(x => x.BusinessTitle, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Business/Job Position : @Html.TextBoxFor(x => x.BusinessPosition, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Annual Income : @Html.TextBoxFor(x => x.AnnualIncome, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                Business/Job Address : @Html.TextAreaFor(x => x.BusinessAddress, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                Other Information : @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-6 text-right">
                <button class="btn btn-success" type="button" onclick="SaveMatrimonial()">Save Matrimonial</button>
            </div>
        </div>
        <br />
    </form>

</div>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnCountry" data-toggle="modal" data-target="#countryModal">
    Launch Country Modal
</button>

<!-- Modal -->
<div class="modal fade" id="countryModal" tabindex="-1" role="dialog" aria-labelledby="countryModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="countryModalLabel">Add New Country</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseCountry()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveCountry()">Add Country</button>
            </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnState" data-toggle="modal" data-target="#stateModal">
    Launch State Modal
</button>

<!-- Modal -->
<div class="modal fade" id="stateModal" tabindex="-1" role="dialog" aria-labelledby="stateModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="stateModalLabel">Add New State</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseState()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveState()">Add State</button>
            </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" style="display:none" id="btnCity" data-toggle="modal" data-target="#cityModal">
    Launch Country Modal
</button>

<!-- Modal -->
<div class="modal fade" id="cityModal" tabindex="-1" role="dialog" aria-labelledby="cityModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="cityModalLabel">Add New City</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="CloseCity()">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveCity()">Add City</button>
            </div>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Content/js/moment.min.js")"></script>
<script src="@Url.Content("~/Content/js/bootstrap-datetimepicker.min.js")"></script>
<script>
    $(document).ready(function () {
        $('#DateOfBirth').datetimepicker({
            format: 'DD/MM/YYYY'
        });
        $('#BirthTime').datetimepicker({
            format: 'LT'
        });
        $('#countryModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","Country")',
                success: function (data) {
                    $('#countryModal .modal-body').html(data);
                }
            });
        });
        $('#stateModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","State")',
                data: { CountryId: $('#CountryId').val() },
                success: function (data) {
                    $('#stateModal .modal-body').html(data);
                }
            });
        });

        $('#cityModal').on('show.bs.modal', function (e) {
            $.ajax({
                url: '@Url.Action("Add","City")',
                data: { StateId: $('#StateId').val() },
                success: function (data) {
                    $('#cityModal .modal-body').html(data);
                }
            });
        });
    })

    function CloseCountry() {
        $('#countryModal').modal('hide');
        $('#CountryId').val("");
    }

    function CloseState() {
        $('#stateModal').modal('hide');
        $('#StateId').val("");
    }
    function CloseCity() {
        $('#cityModal').modal('hide');
        $('#CityId').val("");
    }

    function CountryChanged(country) {
        if ($(country).val() == "0") {
            $('#btnCountry').click();
        }
        else {
            $.ajax({
                url: '@Url.Action("GetStateByCountry","State")',
                data: { CountryId: $(country).val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        var strHtml = "<option value>-- Select --</option>";
                        for (var i = 0; i < data.ResponseValue.length; i++) {
                            strHtml += '<option value="' + data.ResponseValue[i].Id + '">' + data.ResponseValue[i].Name + '</option>';
                        }
                        $('#StateId').html(strHtml);
                        $('#CityId').empty();
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function StateChanged(state) {
        if ($(state).val() == "0") {
            $('#btnState').click();
        }
        else {
            $.ajax({
                url: '@Url.Action("GetCityByState","City")',
                data: { StateId: $(state).val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        var strHtml = "<option value>-- Select --</option>";
                        for (var i = 0; i < data.ResponseValue.length; i++) {
                            strHtml += '<option value="' + data.ResponseValue[i].Id + '">' + data.ResponseValue[i].Name + '</option>';
                        }
                        $('#CityId').html(strHtml);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function CityChanged(city) {
        if ($(city).val() == "0") {
            $('#btnCity').click();
        }
    }

    function SaveCountry() {
        var AddedCountry = $('#txtNewCountry').val();
        if (ValidateCountry()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCountry","Country")',
                data: { CountryName: $('#txtNewCountry').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#CountryId option').removeAttr('selected');
                        $('#CountryId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#countryModal').modal('hide');
                        CountryChanged($('#CountryId')[0]);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function SaveState() {
        var AddedCountry = $('#txtNewState').val();
        if (ValidateState()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveState","State")',
                data: { StateName: $('#txtNewState').val(), CountryId: $('#ddlNewCountry').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#StateId option').removeAttr('selected');
                        $('#StateId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#stateModal').modal('hide');
                        StateChanged($('#StateId')[0]);
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function SaveCity() {
        var AddedCountry = $('#txtNewCity').val();
        if (ValidateCity()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCity","City")',
                data: { CityName: $('#txtNewCity').val(), StateId: $('#ddlNewState').val() },
                success: function (data) {
                    if (data.IsSuccess) {
                        $('#CityId option').removeAttr('selected');
                        $('#CityId').append('<option value="' + data.ResponseValue + '" selected>' + AddedCountry + '</option>');
                        $('#cityModal').modal('hide');
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function ValidateCountry() {
        return true;
    }

    function ValidateState() {
        return true;
    }

    function ValidateCity() {
        return true;
    }

    function OpenPicUpload() {

        $('#fPic').click();
    }

    function PicSelected() {
        if ($('#fPic')[0].files && $('#fPic')[0].files.length > 0) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgPic').attr('src', e.target.result);
            }
            reader.readAsDataURL($('#fPic')[0].files[0]);
        }
    }

    function SaveMatrimonial() {
        if (ValidateMatrimonial()) {
            var formData = new FormData($("#MatrimonialInfo")[0]);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveMatrimonial","Matrimonials")',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.IsSuccess) {
                        alert("Matrimonial information is saved successfully.");
                        window.location.href = '@Url.Action("List","Matrimonials")';
                    }
                    else {
                        alert(data.ResponseValue);
                    }
                }
            });
        }
    }

    function ValidateMatrimonial() {
        return true;
    }
</script>
